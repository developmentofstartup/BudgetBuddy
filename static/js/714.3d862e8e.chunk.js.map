{"version":3,"file":"static/js/714.3d862e8e.chunk.js","mappings":"0OAee,SAASA,IAIpB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,QAAO,MACnBC,GAAeC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,KAAKC,YAC/CC,GAAWC,EAAAA,EAAAA,IAAc,CAAEC,MAAO,wBACjCC,EAAmBC,IAAwBC,EAAAA,EAAAA,UAAS,IACrDC,GAAiBZ,EAAAA,EAAAA,QAAO,IAExBa,EAA0BA,KAC5B,MAAMC,EAAUF,EAAeG,QAAQC,KAAIC,IAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKC,eAAgB,IACvER,EAAqBI,EAAQ,EC3BtB,IAA2BK,GD8BtCC,EAAAA,EAAAA,YAAU,KACNP,IAGAhB,GAASwB,EAAAA,EAAAA,KAAiB,GAAO,GAElC,ICpCmCF,EDqCpBN,GCpClBO,EAAAA,EAAAA,YAAU,KACND,IAEAG,OAAOC,iBAAiB,SAAUJ,GAC3B,KACHG,OAAOE,oBAAoB,SAAUL,EAAK,IAG/C,ID8BH,MAMMM,EAAaC,IACZ3B,EAAUgB,SAAShB,EAAUgB,QAAQY,UAAUD,EAAM,EAE5D,OACIE,EAAAA,EAAAA,KAAA,WAASC,UAAU,uDAAsDC,UACrEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gFAA+EC,UAC1FC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACtBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,UACjCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gDAA+CC,SAAA,EAC1DF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBF,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CAhBnCC,MAAM,EACNC,aAAc,EACdC,eAAgB,EAChBC,MAAO,KAa2CnB,IAAKlB,EAAU+B,SAChCO,EAAAA,EAAKrB,KAAI,CAACsB,EAAMZ,KACbK,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,OAAAE,UACIF,EAAAA,EAAAA,KAAA,OACIC,UAAU,oCACVU,IAAKD,EAAKE,IACVC,IAAKH,EAAKI,KACVC,MAAO,CAAEC,OAAQtC,EAAQ,gBAAAuC,OAAmB5C,EAAe,IAAMQ,EAAkB,IAAM,GAAE,OAAQ,aAG3GmB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gEACXZ,IAAK6B,GAAMlC,EAAeG,QAAQW,GAASoB,EAAGhB,UAC9CC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,0BAAyBC,SAAA,CAAEQ,EAAKI,KAAK,KAACd,EAAAA,EAAAA,KAAA,QAAMC,UAAU,yBAAwBC,SAAEQ,EAAKS,mBAXjGrB,UAiBtBE,EAAAA,EAAAA,KAAA,OACIC,UAAU,WACVc,MAAO,CAAEC,OAAO,GAADC,OAAKpC,EAAkB,GAAE,OAAOqB,UAC/CF,EAAAA,EAAAA,KAACoB,EAAAA,EAAa,CACVC,SAAU,CACN,IAAMxB,EAAU,GAChBY,EAAAA,EAAK,GAAGK,KACR,IACA,IAAMjB,EAAU,GAChBY,EAAAA,EAAK,GAAGK,KACR,IACA,IAAMjB,EAAU,GAChBY,EAAAA,EAAK,GAAGK,KACR,KAGJQ,QAAQ,KACRd,MAAO,GACPe,OAAQC,IACRvB,UAAS,2BAAAgB,OAA6BvC,GAAY,0BAMrEA,EACG,IAEIsB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6DAA4DC,UACvEF,EAAAA,EAAAA,KAACyB,EAAAA,EAAQ,YAQzC,C","sources":["pages/Home.js","hooks/useChangeOnResize.js"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\r\nimport { imgs } from '../content/home';\r\nimport Slider from \"react-slick\";\r\nimport React, {\r\n    useState,\r\n    useRef,\r\n    useEffect\r\n} from 'react';\r\nimport { TypeAnimation } from 'react-type-animation';\r\nimport FlipCard from '../components/FlipCard';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport useChangeOnResize from '../hooks/useChangeOnResize';\r\nimport { seUserAuthorized } from '../features/mainSlice';\r\nimport '../assets/style/full-screen-page.scss';\r\n\r\nexport default function Home() {\r\n    // useEffect(() => {\r\n    //     console.log(userAuthorized);\r\n    // }, [userAuthorized]);\r\n    const dispatch = useDispatch();\r\n    const sliderRef = useRef(null);\r\n    const navbarHeight = useSelector(state => state.main.navHeight);\r\n    const isTablet = useMediaQuery({ query: '(max-width: 992px)' });\r\n    const [bannerTextHeights, setBannerTextHeights] = useState([]);\r\n    const bannerTextRefs = useRef([]);\r\n\r\n    const updateBannerTextHeights = () => {\r\n        const heights = bannerTextRefs.current.map(ref => ref?.offsetHeight || 0);\r\n        setBannerTextHeights(heights);\r\n    };\r\n\r\n    useEffect(() => {\r\n        updateBannerTextHeights();\r\n        \r\n        // display nav in non-auth version on each home render\r\n        dispatch(seUserAuthorized(false));\r\n        // eslint-disable-next-line\r\n    }, []);\r\n    useChangeOnResize(updateBannerTextHeights)\r\n\r\n    const settings = {\r\n        fade: true,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        speed: 3600,// Slide transition duration\r\n    };\r\n    const goToSlide = (index) => {\r\n        if(sliderRef.current) sliderRef.current.slickGoTo(index); // Go to a specific slide\r\n    };\r\n    return (\r\n        <section className='d-flex flex-column position-relative overflow-hidden'>\r\n            <div className='container-xxl pb_12px px_36px d-flex flex-column justify-content-center h-100'>\r\n                <div className='row h-100'>\r\n                    <div className='col-lg-9'>\r\n                        <div className='container-fluid px-0'>\r\n                            <div className='row flex-md-row-reverse align-items-lg-center'>\r\n                                <div className='col-lg-8'>\r\n                                    <Slider {...settings} ref={sliderRef}>\r\n                                        {imgs.map((item, index) => (\r\n                                            <div key={index}>\r\n                                                <div>\r\n                                                    <img\r\n                                                        className='w-100 object-fit-cover object_top'\r\n                                                        src={item.img}\r\n                                                        alt={item.text}\r\n                                                        style={{ height: isTablet ? `calc(100vh - ${navbarHeight + 24 + (bannerTextHeights[0] || 0)}px)` : '100%' }}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"d-flex align-items-center position-absolute z_index_-1 hidden\"\r\n                                                    ref={el => bannerTextRefs.current[index] = el}>\r\n                                                    <h4 className='c_darkBlue shadow_Tmain'>{item.text} <span className='c_main text-capitalize'>{item.highlited}</span></h4>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    </Slider>\r\n                                </div>\r\n                                <div\r\n                                    className='col-lg-4'\r\n                                    style={{ height: `${bannerTextHeights[0]}px` }}>\r\n                                    <TypeAnimation\r\n                                        sequence={[\r\n                                            () => goToSlide(0),\r\n                                            imgs[0].text,\r\n                                            2000,\r\n                                            () => goToSlide(1),\r\n                                            imgs[1].text,\r\n                                            2000,\r\n                                            () => goToSlide(2),\r\n                                            imgs[2].text,\r\n                                            2000,\r\n\r\n                                        ]}\r\n                                        wrapper=\"h4\"\r\n                                        speed={50}\r\n                                        repeat={Infinity}\r\n                                        className={`c_darkBlue shadow_Tmain ${isTablet && 'text-center'}`}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {isTablet ?\r\n                        ''\r\n                        : (\r\n                            <div className=\"login_form_container col-lg-3 d-lg-flex align-items-center\">\r\n                                <FlipCard />\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n","import{ useEffect}  from 'react';\r\nexport default function useChangeOnResize(func) {\r\n    useEffect(() => {\r\n        func();\r\n        // update also on resize\r\n        window.addEventListener('resize', func);\r\n        return () => {\r\n            window.removeEventListener('resize', func);\r\n        };\r\n    // eslint-disable-next-line\r\n    }, []);\r\n}"],"names":["Home","dispatch","useDispatch","sliderRef","useRef","navbarHeight","useSelector","state","main","navHeight","isTablet","useMediaQuery","query","bannerTextHeights","setBannerTextHeights","useState","bannerTextRefs","updateBannerTextHeights","heights","current","map","ref","offsetHeight","func","useEffect","seUserAuthorized","window","addEventListener","removeEventListener","goToSlide","index","slickGoTo","_jsx","className","children","_jsxs","Slider","fade","slidesToShow","slidesToScroll","speed","imgs","item","src","img","alt","text","style","height","concat","el","highlited","TypeAnimation","sequence","wrapper","repeat","Infinity","FlipCard"],"sourceRoot":""}