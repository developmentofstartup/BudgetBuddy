{"version":3,"file":"static/js/444.92712a04.chunk.js","mappings":"yOAce,SAASA,IAIpB,MAAMC,GAAYC,EAAAA,EAAAA,QAAO,MACnBC,GAAeC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,KAAKC,YAC/CC,GAAWC,EAAAA,EAAAA,IAAc,CAAEC,MAAO,wBACjCC,EAAmBC,IAAwBC,EAAAA,EAAAA,UAAS,IACrDC,GAAiBZ,EAAAA,EAAAA,QAAO,IAExBa,EAA0BA,KAC5B,MAAMC,EAAUF,EAAeG,QAAQC,KAAIC,IAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKC,eAAgB,IACvER,EAAqBI,EAAQ,ECzBtB,IAA2BK,GD4BtCC,EAAAA,EAAAA,YAAU,KACNP,GAAyB,GAC1B,IC9BmCM,ED+BpBN,GC9BlBO,EAAAA,EAAAA,YAAU,KACND,IAEAE,OAAOC,iBAAiB,SAAUH,GAC3B,KACHE,OAAOE,oBAAoB,SAAUJ,EAAK,IAG/C,IDwBH,MAMMK,EAAaC,IACZ1B,EAAUgB,SAAShB,EAAUgB,QAAQW,UAAUD,EAAM,EAE5D,OACIE,EAAAA,EAAAA,MAAA,WAEIC,MAAO,CAAEC,OAAS,SAClBC,UAAU,uDAAsDC,SAAA,EAEhEC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,KACJD,EAAAA,EAAAA,KAAA,OACAF,UAAU,gFACVF,MAAO,CAAEM,WAAYjC,GAAe8B,UACpCJ,EAAAA,EAAAA,MAAA,OAAKG,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uBAAsBC,UACjCJ,EAAAA,EAAAA,MAAA,OAAKG,UAAU,gDAA+CC,SAAA,EAC1DC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,KAACG,EAAAA,EAAM,CAvB/BC,MAAM,EACNC,aAAc,EACdC,eAAgB,EAChBC,MAAO,KAoBuCtB,IAAKlB,EAAUgC,SAChCS,EAAAA,EAAKxB,KAAI,CAACyB,EAAMhB,KACbE,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,OACIF,UAAU,oCACVY,IAAKD,EAAKE,IACVC,IAAKH,EAAKI,KACVjB,MAAO,CAAEC,OAAQvB,EAAQ,gBAAAwC,OAAmB7C,EAAe,IAAMQ,EAAkB,IAAM,GAAE,OAAQ,aAG3GuB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gEACXb,IAAK8B,GAAMnC,EAAeG,QAAQU,GAASsB,EAAGhB,UAC9CJ,EAAAA,EAAAA,MAAA,MAAIG,UAAU,0BAAyBC,SAAA,CAAEU,EAAKI,KAAK,KAACb,EAAAA,EAAAA,KAAA,QAAMF,UAAU,yBAAwBC,SAAEU,EAAKO,mBAXjGvB,UAiBtBO,EAAAA,EAAAA,KAAA,OACIF,UAAU,WACVF,MAAO,CAAEC,OAAO,GAADiB,OAAKrC,EAAkB,GAAE,OAAOsB,UAC/CC,EAAAA,EAAAA,KAACiB,EAAAA,EAAa,CACVC,SAAU,CACN,IAAM1B,EAAU,GAChBgB,EAAAA,EAAK,GAAGK,KACR,IACA,IAAMrB,EAAU,GAChBgB,EAAAA,EAAK,GAAGK,KACR,IACA,IAAMrB,EAAU,GAChBgB,EAAAA,EAAK,GAAGK,KACR,KAGJM,QAAQ,KACRZ,MAAO,GACPa,OAAQC,IACRvB,UAAS,2BAAAgB,OAA6BxC,GAAY,0BAMrEA,EACG,IAEI0B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6DAA4DC,UACvEC,EAAAA,EAAAA,KAACsB,EAAAA,EAAQ,aAQrC,C","sources":["pages/Home.js","hooks/useChangeOnResize.js"],"sourcesContent":["import Nav from '../components/Nav';\r\nimport { useSelector } from 'react-redux';\r\nimport { imgs } from '../content/home';\r\nimport Slider from \"react-slick\";\r\nimport React, {\r\n    useState,\r\n    useRef,\r\n    useEffect\r\n} from 'react';\r\nimport { TypeAnimation } from 'react-type-animation';\r\nimport FlipCard from '../components/FlipCard';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport useChangeOnResize from '../hooks/useChangeOnResize';\r\n\r\nexport default function Home() {\r\n    // useEffect(() => {\r\n    //     console.log(userAuthorized);\r\n    // }, [userAuthorized]);\r\n    const sliderRef = useRef(null);\r\n    const navbarHeight = useSelector(state => state.main.navHeight);\r\n    const isTablet = useMediaQuery({ query: '(max-width: 992px)' });\r\n    const [bannerTextHeights, setBannerTextHeights] = useState([]);\r\n    const bannerTextRefs = useRef([]);\r\n\r\n    const updateBannerTextHeights = () => {\r\n        const heights = bannerTextRefs.current.map(ref => ref?.offsetHeight || 0);\r\n        setBannerTextHeights(heights);\r\n    };\r\n\r\n    useEffect(() => {\r\n        updateBannerTextHeights();\r\n    }, []);\r\n    useChangeOnResize(updateBannerTextHeights)\r\n\r\n    const settings = {\r\n        fade: true,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        speed: 3600,// Slide transition duration\r\n    };\r\n    const goToSlide = (index) => {\r\n        if(sliderRef.current) sliderRef.current.slickGoTo(index); // Go to a specific slide\r\n    };\r\n    return (\r\n        <section\r\n            // eslint-disable-next-line\r\n            style={{ height:  '100vh' }}\r\n            className='d-flex flex-column position-relative overflow-hidden'\r\n        >\r\n            <Nav />\r\n            <div\r\n            className='container-xxl pb_12px px_36px d-flex flex-column justify-content-center h-100'\r\n            style={{ paddingTop: navbarHeight }}>\r\n            <div className='row h-100'>\r\n                <div className='col-lg-9'>\r\n                    <div className='container-fluid px-0'>\r\n                        <div className='row flex-md-row-reverse align-items-lg-center'>\r\n                            <div className='col-lg-8'>\r\n                                <Slider {...settings} ref={sliderRef}>\r\n                                    {imgs.map((item, index) => (\r\n                                        <div key={index}>\r\n                                            <div>\r\n                                                <img\r\n                                                    className='w-100 object-fit-cover object_top'\r\n                                                    src={item.img}\r\n                                                    alt={item.text}\r\n                                                    style={{ height: isTablet ? `calc(100vh - ${navbarHeight + 24 + (bannerTextHeights[0] || 0)}px)` : '100%' }}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"d-flex align-items-center position-absolute z_index_-1 hidden\"\r\n                                                ref={el => bannerTextRefs.current[index] = el}>\r\n                                                <h4 className='c_darkBlue shadow_Tmain'>{item.text} <span className='c_main text-capitalize'>{item.highlited}</span></h4>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n                                </Slider>\r\n                            </div>\r\n                            <div\r\n                                className='col-lg-4'\r\n                                style={{ height: `${bannerTextHeights[0]}px` }}>\r\n                                <TypeAnimation\r\n                                    sequence={[\r\n                                        () => goToSlide(0),\r\n                                        imgs[0].text,\r\n                                        2000,\r\n                                        () => goToSlide(1),\r\n                                        imgs[1].text,\r\n                                        2000,\r\n                                        () => goToSlide(2),\r\n                                        imgs[2].text,\r\n                                        2000,\r\n\r\n                                    ]}\r\n                                    wrapper=\"h4\"\r\n                                    speed={50}\r\n                                    repeat={Infinity}\r\n                                    className={`c_darkBlue shadow_Tmain ${isTablet && 'text-center'}`}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {isTablet ?\r\n                    ''\r\n                    : (\r\n                        <div className=\"login_form_container col-lg-3 d-lg-flex align-items-center\">\r\n                            <FlipCard />\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n        </section>\r\n    );\r\n}\r\n","import{ useEffect}  from 'react';\r\nexport default function useChangeOnResize(func) {\r\n    useEffect(() => {\r\n        func();\r\n        // update also on resize\r\n        window.addEventListener('resize', func);\r\n        return () => {\r\n            window.removeEventListener('resize', func);\r\n        };\r\n    // eslint-disable-next-line\r\n    }, []);\r\n}"],"names":["Home","sliderRef","useRef","navbarHeight","useSelector","state","main","navHeight","isTablet","useMediaQuery","query","bannerTextHeights","setBannerTextHeights","useState","bannerTextRefs","updateBannerTextHeights","heights","current","map","ref","offsetHeight","func","useEffect","window","addEventListener","removeEventListener","goToSlide","index","slickGoTo","_jsxs","style","height","className","children","_jsx","Nav","paddingTop","Slider","fade","slidesToShow","slidesToScroll","speed","imgs","item","src","img","alt","text","concat","el","highlited","TypeAnimation","sequence","wrapper","repeat","Infinity","FlipCard"],"sourceRoot":""}